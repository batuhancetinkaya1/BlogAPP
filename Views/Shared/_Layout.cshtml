@using System.Security.Claims
@using BlogApp.Helpers
<!DOCTYPE html>
<html lang="tr">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - BlogApp</title>
    
    <!-- SEO Meta Tags -->
    <meta name="description" content="@ViewData["Description"] ?? "BlogApp - Teknoloji, programlama ve web geliştirme üzerine blog yazıları."" />
    <meta name="keywords" content="@ViewData["Keywords"] ?? "blog, teknoloji, programlama, web geliştirme, yazılım"" />
    <meta name="author" content="BlogApp" />
    <meta name="robots" content="index, follow" />
    
    <!-- OpenGraph Meta Tags -->
    <meta property="og:title" content="@ViewData["Title"] - BlogApp" />
    <meta property="og:description" content="@ViewData["Description"] ?? "BlogApp - Teknoloji, programlama ve web geliştirme üzerine blog yazıları."" />
    @if (!string.IsNullOrEmpty(ViewData["OgImage"] as string))
    {
        <meta property="og:image" content="@ViewData["OgImage"]" />
    }
    <meta property="og:url" content="@Context.Request.Scheme://@Context.Request.Host@Context.Request.Path" />
    <meta property="og:type" content="website" />
    
    <!-- Twitter Card Meta Tags -->
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content="@ViewData["Title"] - BlogApp" />
    <meta name="twitter:description" content="@ViewData["Description"] ?? "BlogApp - Teknoloji, programlama ve web geliştirme üzerine blog yazıları."" />
    <meta name="twitter:image" content="@ViewData["OgImage"] ?? "/img/posts/default.jpg"" />
    
    <link rel="canonical" href="@Context.Request.Scheme://@Context.Request.Host@Context.Request.Path" />
    <link rel="stylesheet" href="~/lib/bootstrap/css/bootstrap.min.css" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/BlogApp.styles.css" asp-append-version="true" />
    <style>
        /* Genel tag renk tanımları */
        .bg-orange, .badge.bg-orange {
            background-color: #fd7e14 !important;
        }
        .text-orange {
            color: #fd7e14 !important;
        }
        
        /* Tüm badge'lar için standart formatlar */
        .badge {
            padding: 0.45em 0.65em;
            font-weight: 600;
            border-radius: 0.375rem;
        }
        
        /* Tag badge'ları */
        a.badge {
            text-decoration: none;
            transition: all 0.2s ease;
        }
        
        a.badge:hover {
            opacity: 0.85;
        }
        
        /* Footer için küçültme */
        .footer {
            padding: 0.5rem 0;
            margin-top: 2rem;
        }
        
        /* Şifre input alanları için göz butonunu konumlandırma */
        .password-container {
            position: relative;
        }
        
        .password-toggle {
            position: absolute;
            right: 10px;
            top: 50%;
            transform: translateY(-50%);
            border: none;
            background: transparent;
            cursor: pointer;
            color: #6c757d;
        }
        
        .password-toggle:hover {
            color: #212529;
        }
        
        body { 
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }
    </style>
    
    @RenderSection("Styles", required: false)
    
    @* TinyMCE sadece Create ve Edit sayfalarında değilse yüklensin *@
    @if (!(Context.Request.Path.Value ?? string.Empty).Contains("/Posts/Create") && !(Context.Request.Path.Value ?? string.Empty).Contains("/Posts/Edit"))
    {
        <script src="https://cdn.tiny.cloud/1/qagffr3pkuv17a8on1afax661irst1hbr4e6tbv888sz91jc/tinymce/6/tinymce.min.js" referrerpolicy="origin"></script>
        <script>
            tinymce.init({
                selector: 'textarea#Content',
                plugins: 'anchor autolink charmap codesample emoticons image link lists media searchreplace table visualblocks wordcount',
                toolbar: 'undo redo | blocks fontfamily fontsize | bold italic underline strikethrough | link image media table | align lineheight | numlist bullist indent outdent | emoticons charmap | removeformat',
                height: 500
            });
        </script>
    }
</head>
<body class="d-flex flex-column min-vh-100">
    <header>
        <nav class="navbar navbar-expand-lg navbar-dark bg-primary">
            <div class="container">
                <a class="navbar-brand" asp-controller="Home" asp-action="Index">
                    <i class="bi bi-pencil-square me-1"></i>
                    BlogApp
                </a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarSupportedContent">
                    <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                        <li class="nav-item">
                            <a class="nav-link" asp-controller="Home" asp-action="Index">Ana Sayfa</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" asp-controller="Posts" asp-action="Index">Blog</a>
                        </li>
                        @if (User.IsInRole("Admin"))
                        {
                            <li class="nav-item">
                                <a class="nav-link" asp-controller="Tags" asp-action="Index">Etiketler</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" asp-controller="Admin" asp-action="Index">Admin Panel</a>
                            </li>
                        }
                        @if (User.Identity?.IsAuthenticated == true)
                        {
                            <li class="nav-item">
                                <a class="nav-link" asp-controller="Posts" asp-action="Create">
                                    <i class="bi bi-plus-circle"></i> Yeni Yazı
                                </a>
                            </li>
                            @if (User.IsInRole("Admin"))
                            {
                                <li class="nav-item">
                                    <a class="nav-link" asp-controller="Tags" asp-action="Create">
                                        <i class="bi bi-tag"></i> Etiket Oluştur
                                    </a>
                                </li>
                            }
                        }
                    </ul>
                    <div class="d-flex align-items-center">
                        <form class="d-flex me-2" asp-controller="Posts" asp-action="Search" method="get">
                            <input class="form-control me-2" type="search" placeholder="Blog yazılarında ara..." aria-label="Search" name="query">
                            <button class="btn btn-outline-light" type="submit">Ara</button>
                        </form>
                        @if (User.Identity!.IsAuthenticated)
                        {
                            <div class="dropdown user-menu ms-3">
                                <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                    @{
                                        var userImage = "/img/profiles/default.jpg";
                                        var userId = User.FindFirst(ClaimTypes.NameIdentifier)?.Value;
                                        if (!string.IsNullOrEmpty(userId) && int.TryParse(userId, out var id))
                                        {
                                            var userRepo = Context.RequestServices.GetService<BlogApp.Data.Abstract.IUserRepository>();
                                            if (userRepo != null)
                                            {
                                                var user = userRepo.GetByIdAsync(id).GetAwaiter().GetResult();
                                                if (user != null && !string.IsNullOrEmpty(user.Image))
                                                {
                                                    userImage = user.Image;
                                                }
                                            }
                                        }
                                    }
                                    <img src="@userImage" class="rounded-circle img-fluid" style="width: 36px; height: 36px; object-fit: cover;" alt="Profil Resmi" />
                                </a>
                                <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="navbarDropdown">
                                    <li class="dropdown-header">
                                        <div class="fw-bold">@User.Identity?.Name</div>
                                        <div class="text-muted small">@User.FindFirst(ClaimTypes.Email)?.Value</div>
                                    </li>
                                    <li><hr class="dropdown-divider"></li>
                                    <li><a class="dropdown-item" asp-controller="Users" asp-action="Profile" asp-route-username="@User.Identity?.Name"><i class="bi bi-person me-2"></i>Profilim</a></li>
                                    <li><a class="dropdown-item" asp-controller="Users" asp-action="MyPosts"><i class="bi bi-file-text me-2"></i>Yazılarım</a></li>
                                    @if (User.IsInRole("Admin"))
                                    {
                                        <li><a class="dropdown-item" asp-controller="Admin" asp-action="Index"><i class="bi bi-gear me-2"></i>Yönetim Paneli</a></li>
                                    }
                                    <li><hr class="dropdown-divider"></li>
                                    <li><a class="dropdown-item" asp-controller="Users" asp-action="LogoutConfirm"><i class="bi bi-box-arrow-right me-2"></i>Çıkış Yap</a></li>
                                </ul>
                            </div>
                        }
                        else
                        {
                            <ul class="navbar-nav ms-2">
                                <li class="nav-item">
                                    <a class="nav-link" asp-controller="Users" asp-action="Login"><i class="bi bi-box-arrow-in-right me-1"></i>Giriş</a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link" asp-controller="Users" asp-action="Register"><i class="bi bi-person-plus me-1"></i>Kayıt</a>
                                </li>
                            </ul>
                        }
                    </div>
                </div>
            </div>
        </nav>
    </header>
    <div class="container mt-3">
        <div class="toast-container position-fixed bottom-0 end-0 p-3">
            <div id="successToast" class="toast align-items-center text-white bg-success border-0" role="alert" aria-live="assertive" aria-atomic="true">
                <div class="d-flex">
                    <div class="toast-body">
                        Başarılı!
                    </div>
                    <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
                </div>
            </div>
            <div id="errorToast" class="toast align-items-center text-white bg-danger border-0" role="alert" aria-live="assertive" aria-atomic="true">
                <div class="d-flex">
                    <div class="toast-body">
                        Bir hata oluştu.
                    </div>
                    <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
                </div>
            </div>
        </div>

        <partial name="_Notifications" />

        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

    <footer class="border-top footer bg-light mt-auto">
        <div class="container py-1">
            <div class="d-flex justify-content-between align-items-center small">
                <div class="d-flex align-items-center">
                    <i class="bi bi-journal-text text-primary me-1"></i>
                    <span>BlogApp</span>
                    <span class="text-muted mx-1">•</span>
                    <span class="text-muted">Modern bir blog platformu</span>
                </div>
                <div class="text-muted">
                    &copy; @DateTime.Now.Year
                    <a href="/gizlilik" class="text-decoration-none ms-2">Gizlilik</a>
                </div>
            </div>
        </div>
    </footer>

    <button id="scrollToTop" class="btn btn-primary rounded-circle position-fixed bottom-0 end-0 m-4 d-none">
        <i class="bi bi-arrow-up"></i>
    </button>

    <script src="~/lib/jquery/jquery.min.js"></script>
    <script src="~/lib/bootstrap/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    @await RenderSectionAsync("Scripts", required: false)

    <script>
        function showToast(type, message) {
            const toast = document.getElementById(type + 'Toast');
            toast.querySelector('.toast-body').textContent = message;
            const bsToast = new bootstrap.Toast(toast);
            bsToast.show();
        }

        const scrollToTopBtn = document.getElementById('scrollToTop');
        
        window.addEventListener('scroll', () => {
            if (window.pageYOffset > 300) {
                scrollToTopBtn.classList.remove('d-none');
            } else {
                scrollToTopBtn.classList.add('d-none');
            }
        });

        scrollToTopBtn.addEventListener('click', () => {
            window.scrollTo({
                top: 0,
                behavior: 'smooth'
            });
        });
        
        // Şifre görünürlüğü toggle butonu
        document.addEventListener('DOMContentLoaded', function() {
            const passwordFields = document.querySelectorAll('input[type="password"]');
            
            passwordFields.forEach(field => {
                // Mevcut yapıyı koru
                const parent = field.parentElement;
                
                // Sadece doğrudan form-group veya normal input alanlarına uygula
                // ASP.NET validation wrap'ları için kontrol
                if (!parent.classList.contains('password-container')) {
                    // Yeni password container oluştur
                    const container = document.createElement('div');
                    container.className = 'password-container';
                    
                    // Input elemanını wrap
                    parent.insertBefore(container, field);
                    container.appendChild(field);
                    
                    // Göz butonu ekle
                    const toggleButton = document.createElement('button');
                    toggleButton.type = 'button';
                    toggleButton.className = 'password-toggle';
                    toggleButton.innerHTML = '<i class="bi bi-eye"></i>';
                    toggleButton.setAttribute('aria-label', 'Şifreyi göster/gizle');
                    
                    // Göz butonunu container'a ekle
                    container.appendChild(toggleButton);
                    
                    // Göz butonuna tıklama olayı ekle
                    toggleButton.addEventListener('click', function() {
                        if (field.type === 'password') {
                            field.type = 'text';
                            toggleButton.innerHTML = '<i class="bi bi-eye-slash"></i>';
                        } else {
                            field.type = 'password';
                            toggleButton.innerHTML = '<i class="bi bi-eye"></i>';
                        }
                    });
                }
            });
        });
    </script>
</body>
</html> 