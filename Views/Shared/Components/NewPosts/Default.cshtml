@model List<BlogApp.Entity.Post>

@{
    // Sadece yayınlanmış olan yazıları göster
    var publishedPosts = Model.Where(p => p.Status == BlogApp.Entity.PostStatus.Published && p.PublishedOn != null).ToList();
}

<div class="card mb-4">
    <div class="card-header d-flex justify-content-between align-items-center">
        <div><i class="bi bi-clock-history me-2"></i> Son Yazılar</div>
        <a href="/Posts?sort=date" class="btn btn-sm btn-outline-primary">Tümünü Gör <i class="bi bi-arrow-right"></i></a>
    </div>
    <div class="card-body">
        @if (publishedPosts.Any())
        {
            <div class="list-group list-group-flush">
                @foreach (var post in publishedPosts.OrderByDescending(p => p.PublishedOn).Take(3))
                {
                    <a href="/posts/@post.Url" class="list-group-item list-group-item-action">
                        <div class="d-flex w-100 justify-content-between align-items-center">
                            <h6 class="mb-1 text-truncate pe-2">@post.Title</h6>
                            <small class="text-muted">@post.PublishedOn?.ToString("dd MMM")</small>
                        </div>
                    </a>
                }
            </div>
        }
        else
        {
            <div class="text-center py-3">
                <i class="bi bi-journal-x fs-1 text-muted"></i>
                <p class="mt-2 text-muted">Henüz yazı bulunmuyor</p>
            </div>
        }
    </div>
</div> 