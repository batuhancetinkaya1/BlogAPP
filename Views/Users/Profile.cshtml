@using BlogApp.Helpers
@model BlogApp.Models.ViewModels.UserProfileViewModel

@{
    ViewData["Title"] = "Profil";
    
    // Eğer TempData varsa, görüntülenip temizleyelim
    var successMessage = TempData["success"] as string;
    var errorMessage = TempData["error"] as string;
    
    // TempData'yı silelim ki tekrar görüntülenmesin
    TempData.Remove("success");
    TempData.Remove("error");
}

<div class="container mt-4">
    @if (Model?.User == null)
    {
        <div class="alert alert-danger">
            Kullanıcı bulunamadı.
        </div>
    }
    else
    {
        @if (!string.IsNullOrEmpty(successMessage))
        {
            <div class="alert alert-success alert-dismissible fade show" role="alert">
                @successMessage
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }

        @if (!string.IsNullOrEmpty(errorMessage))
        {
            <div class="alert alert-danger alert-dismissible fade show" role="alert">
                @errorMessage
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }

        <div class="row">
            <div class="col-md-4 mb-4">
                <div class="card">
                    <div class="card-body text-center">
                        <img src="@(string.IsNullOrEmpty(Model.User.Image) ? "/img/profiles/default.jpg" : Model.User.Image)" 
                             alt="@Model.User.UserName" 
                             class="rounded-circle mb-3" 
                             style="width: 150px; height: 150px; object-fit: cover;">
                        <h4 class="card-title">@Model.User.UserName</h4>
                        <p class="text-muted">@(Model.User.Email ?? "No email")</p>
                        @if (Model.User.IsAdmin)
                        {
                            <div class="mb-3">
                                <span class="badge bg-primary">Admin</span>
                            </div>
                        }
                        
                        @{
                            var currentUserId = User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value;
                            var profileUserId = Model.User.UserId.ToString();
                        }
                        
                        @if (currentUserId == profileUserId)
                        {
                            <div class="mt-3">
                                <button class="btn btn-outline-primary" data-bs-toggle="modal" data-bs-target="#profileModal">
                                    <i class="bi bi-pencil-square me-2"></i>Profili Düzenle
                                </button>
                            </div>
                        }
                    </div>
                    
                    <div class="card-footer text-muted">
                        <div class="d-flex justify-content-around">
                            <div class="text-center">
                                <h6>@(Model.Posts?.Count ?? 0)</h6>
                                <small>Yazı</small>
                            </div>
                            <div class="text-center">
                                <h6>@(Model.User.CreatedAt.ToString("MM/yyyy"))</h6>
                                <small>Katılma</small>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            
            <div class="col-md-8">
                <div class="card">
                    <div class="card-body">
                        <ul class="nav nav-tabs" role="tablist">
                            <li class="nav-item">
                                <a class="nav-link active" data-bs-toggle="tab" href="#posts">Yazılar</a>
                            </li>
                            @if (User.Identity?.IsAuthenticated == true && User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value == Model?.User?.UserId.ToString())
                            {
                                <li class="nav-item">
                                    <a class="nav-link" data-bs-toggle="tab" href="#settings">Tercihler</a>
                                </li>
                            }
                        </ul>

                        <div class="tab-content">
                            <div class="tab-pane fade show active" id="posts">
                                @if (Model?.Posts != null && Model.Posts.Any())
                                {
                                    <div class="table-responsive">
                                        <table class="table table-hover">
                                            <thead>
                                                <tr>
                                                    <th>Başlık</th>
                                                    <th>Durum</th>
                                                    <th>Tarih</th>
                                                    <th>İşlemler</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @foreach (var post in Model.Posts)
                                                {
                                                    <tr>
                                                        <td>
                                                            <a href="/posts/@(post?.Url ?? "#")" class="text-decoration-none">@(post?.Title ?? "Başlıksız")</a>
                                                        </td>
                                                        <td>@post?.Status</td>
                                                        <td>@post?.CreatedAt.ToString("dd.MM.yyyy")</td>
                                                        <td>
                                                            <div class="btn-group">
                                                                <a href="/Posts/Edit/@post?.PostId" class="btn btn-sm btn-outline-primary">
                                                                    <i class="bi bi-pencil"></i>
                                                                </a>
                                                                <a href="/Posts/Delete/@post?.PostId" class="btn btn-sm btn-outline-danger">
                                                                    <i class="bi bi-trash"></i>
                                                                </a>
                                                            </div>
                                                        </td>
                                                    </tr>
                                                }
                                            </tbody>
                                        </table>
                                    </div>
                                }
                                else
                                {
                                    <div class="alert alert-info">
                                        Henüz hiç yazı yok.
                                    </div>
                                }
                            </div>

                            @if (User.Identity?.IsAuthenticated == true && User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value == Model?.User?.UserId.ToString())
                            {
                                <div class="tab-pane fade" id="settings">
                                    <div class="p-3">
                                        <h5>Tercihler</h5>
                                        <hr />
                                        <p class="text-muted">Uygulama tercihlerinizi buradan değiştirebilirsiniz. Yakında eklenecek özellikler:</p>
                                        <ul class="text-muted">
                                            <li>Karanlık mod</li>
                                            <li>Bildirim tercihleri</li>
                                            <li>Gizlilik ayarları</li>
                                        </ul>
                                        <div class="alert alert-info">
                                            Tercihler ayarları henüz geliştirme aşamasındadır. Çok yakında kullanıma sunulacaktır.
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

<!-- Profil Düzenleme Modal -->
<div class="modal fade" id="profileModal" tabindex="-1" aria-labelledby="profileModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="profileModalLabel">Profili Düzenle</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form asp-action="UpdateProfile" asp-controller="Users" method="post" enctype="multipart/form-data">
                <div class="modal-body">
                    @if (Model?.User != null)
                    {
                        <div class="mb-3">
                            <label for="userName" class="form-label">Kullanıcı Adı</label>
                            <input type="text" class="form-control" id="userName" name="UserName" value="@Model.User.UserName" required>
                        </div>
                        <div class="mb-3">
                            <label for="email" class="form-label">E-posta</label>
                            <input type="email" class="form-control" id="email" name="Email" value="@Model.User.Email" required>
                        </div>
                    }
                    else
                    {
                        <div class="alert alert-warning">Kullanıcı bilgileri yüklenemiyor.</div>
                    }
                    <div class="mb-3">
                        <label for="password" class="form-label">Yeni Şifre (Opsiyonel)</label>
                        <input type="password" class="form-control" id="password" name="Password" minlength="6">
                        <small class="text-muted">Şifrenizi değiştirmek istemiyorsanız boş bırakın.</small>
                    </div>
                    <div class="mb-3">
                        <label for="image" class="form-label">Profil Resmi</label>
                        <input type="file" class="form-control" id="image" name="Image" accept="image/*">
                        <small class="text-muted">Maksimum dosya boyutu: 2MB. İzin verilen formatlar: JPG, PNG</small>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">İptal</button>
                    <button type="submit" class="btn btn-primary">Kaydet</button>
                </div>
                @Html.AntiForgeryToken()
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function deletePost(postId) {
            if (confirm('Bu yazıyı silmek istediğinize emin misiniz?')) {
                // CSRF token'ı al
                const token = document.querySelector('input[name="__RequestVerificationToken"]').value;
                
                // AJAX isteği gönder
                fetch(`/Posts/Delete/${postId}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest',
                        'X-CSRF-TOKEN': token
                    }
                })
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Silme işlemi başarısız oldu');
                    }
                    return response.json();
                })
                .then(data => {
                    if (data.success) {
                        // Başarılı ise post elementini kaldır
                        const postElement = document.getElementById(`post-${postId}`);
                        if (postElement) {
                            postElement.remove();
                        }
                        
                        // Eğer hiç post kalmadıysa bilgi mesajı göster
                        const postsContainer = document.querySelector('.tab-pane#posts');
                        if (!postsContainer.querySelector('.card')) {
                            postsContainer.innerHTML = '<div class="alert alert-info">Henüz yazı paylaşılmamış.</div>';
                        }
                    } else {
                        alert(data.message || 'Bir hata oluştu');
                    }
                })
                .catch(error => {
                    console.error('Hata:', error);
                    alert('Silme işlemi sırasında bir hata oluştu');
                });
            }
        }
    </script>
} 