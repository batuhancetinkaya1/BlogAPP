@model BlogApp.Models.PostCreateViewModel
@using BlogApp.Entity

@{
    ViewData["Title"] = "Yeni Blog Yazısı";
}

@section Styles {
    <style>
        /* Debug için form sınırlarını göster */
        #blogPostForm {
            position: relative;
        }
        .btn-debug {
            position: fixed;
            bottom: 20px;
            right: 20px;
            z-index: 1000;
        }
    </style>
}

<div class="container mt-4">
    <div class="row">
        <div class="col-lg-9 mx-auto">
            <div class="card shadow">
                <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
                    <h3 class="card-title mb-0">@ViewData["Title"]</h3>
                    <a href="javascript:void(0)" class="text-white" data-bs-toggle="modal" data-bs-target="#blogTipsModal">
                        <i class="bi bi-info-circle"></i> Yazım İpuçları
                    </a>
                </div>
                <div class="card-body">
                    <form asp-controller="Posts" asp-action="Create" method="post" enctype="multipart/form-data" id="blogPostForm">
                        <div asp-validation-summary="ModelOnly" class="alert alert-danger"></div>
                        @Html.AntiForgeryToken()

                        <!-- Hidden debug buton -->
                        <button type="button" id="debugFormBtn" class="btn btn-sm btn-warning btn-debug d-none">Debug</button>

                        <ul class="nav nav-tabs mb-4" id="blogTabs" role="tablist">
                            <li class="nav-item" role="presentation">
                                <button class="nav-link active" id="content-tab" data-bs-toggle="tab" data-bs-target="#content" type="button" role="tab" aria-controls="content" aria-selected="true">
                                    <i class="bi bi-pencil-square"></i> İçerik
                                </button>
                            </li>
                            <li class="nav-item" role="presentation">
                                <button class="nav-link" id="media-tab" data-bs-toggle="tab" data-bs-target="#media" type="button" role="tab" aria-controls="media" aria-selected="false">
                                    <i class="bi bi-image"></i> Medya
                                </button>
                            </li>
                            <li class="nav-item" role="presentation">
                                <button class="nav-link" id="seo-tab" data-bs-toggle="tab" data-bs-target="#seo" type="button" role="tab" aria-controls="seo" aria-selected="false">
                                    <i class="bi bi-search"></i> SEO
                                </button>
                            </li>
                            <li class="nav-item" role="presentation">
                                <button class="nav-link" id="settings-tab" data-bs-toggle="tab" data-bs-target="#settings" type="button" role="tab" aria-controls="settings" aria-selected="false">
                                    <i class="bi bi-gear"></i> Ayarlar
                                </button>
                            </li>
                        </ul>

                        <div class="tab-content" id="blogTabsContent">
                            <!-- İçerik Sekmesi -->
                            <div class="tab-pane fade show active" id="content" role="tabpanel" aria-labelledby="content-tab">
                                <div class="mb-4">
                                    <label for="Title" class="form-label fw-bold">
                                        <i class="bi bi-type-h1"></i> @Html.DisplayNameFor(model => model.Title)
                                    </label>
                                    <input asp-for="Title" class="form-control form-control-lg" placeholder="Etkileyici bir başlık yazın..." required />
                                    <span asp-validation-for="Title" class="text-danger"></span>
                                    <div class="form-text">Başlığınız çarpıcı ve akılda kalıcı olmalıdır. SEO için 60 karakterden kısa tutun.</div>
                                </div>

                                <div class="mb-4">
                                    <label for="Description" class="form-label fw-bold">
                                        <i class="bi bi-text-paragraph"></i> @Html.DisplayNameFor(model => model.Description)
                                    </label>
                                    <textarea asp-for="Description" class="form-control" rows="3" placeholder="İçeriğinizin kısa bir özetini yazın..."></textarea>
                                    <span asp-validation-for="Description" class="text-danger"></span>
                                    <div class="form-text">Bu açıklama sosyal medya paylaşımlarında ve arama sonuçlarında görünecektir.</div>
                                </div>

                                <div class="mb-4">
                                    <label for="Content" class="form-label fw-bold">
                                        <i class="bi bi-file-richtext"></i> @Html.DisplayNameFor(model => model.Content)
                                    </label>
                                    <textarea asp-for="Content" id="Content" class="form-control" rows="10" required data-val="true" data-val-required="İçerik alanı zorunludur"></textarea>
                                    <span asp-validation-for="Content" class="text-danger"></span>
                                </div>
                            </div>

                            <!-- Medya Sekmesi -->
                            <div class="tab-pane fade" id="media" role="tabpanel" aria-labelledby="media-tab">
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="mb-4">
                                            <label for="ImageFile" class="form-label fw-bold">
                                                <i class="bi bi-image"></i> @Html.DisplayNameFor(model => model.ImageFile)
                                            </label>
                                            <input asp-for="ImageFile" class="form-control" type="file" accept="image/*" id="ImageFile" />
                                            <span asp-validation-for="ImageFile" class="text-danger"></span>
                                            <div class="form-text">Yüksek kaliteli bir kapak resmi kullanın (önerilen boyut: 1200x630px).</div>
                                        </div>
                                        <div id="imagePreview" class="mb-4 d-none">
                                            <p class="text-muted">Önizleme:</p>
                                            <img id="previewImg" src="#" alt="Kapak resmi önizleme" class="img-fluid img-thumbnail" style="max-height: 300px" />
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="mb-4">
                                            <label for="VideoUrl" class="form-label fw-bold">
                                                <i class="bi bi-youtube"></i> @Html.DisplayNameFor(model => model.VideoUrl)
                                            </label>
                                            <input asp-for="VideoUrl" class="form-control" placeholder="https://www.youtube.com/watch?v=..." id="VideoUrl" />
                                            <span asp-validation-for="VideoUrl" class="text-danger"></span>
                                            <div class="form-text">YouTube video ID veya tam URL girin (ör: https://www.youtube.com/watch?v=abcdef123).</div>
                                        </div>
                                        <div id="videoPreview" class="mb-4 d-none">
                                            <p class="text-muted">Video Önizleme:</p>
                                            <div class="ratio ratio-16x9">
                                                <iframe id="youtubeEmbed" src="" allowfullscreen></iframe>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <!-- SEO Sekmesi -->
                            <div class="tab-pane fade" id="seo" role="tabpanel" aria-labelledby="seo-tab">
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="mb-4">
                                            <label for="Url" class="form-label fw-bold">
                                                <i class="bi bi-link-45deg"></i> @Html.DisplayNameFor(model => model.Url)
                                            </label>
                                            <div class="input-group">
                                                <span class="input-group-text">yoursite.com/posts/</span>
                                                <input asp-for="Url" class="form-control" placeholder="baslık-ornegi" id="Url" />
                                            </div>
                                            <span asp-validation-for="Url" class="text-danger"></span>
                                            <div class="form-text">Boş bırakırsanız otomatik olarak başlıktan oluşturulacaktır.</div>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="mb-4">
                                            <label for="Keywords" class="form-label fw-bold">
                                                <i class="bi bi-tags"></i> @Html.DisplayNameFor(model => model.Keywords)
                                            </label>
                                            <input asp-for="Keywords" class="form-control" placeholder="blog,yazılım,teknoloji" id="Keywords" />
                                            <span asp-validation-for="Keywords" class="text-danger"></span>
                                            <div class="form-text">Anahtar kelimeleri virgülle ayırın. Google için artık çok önemli değil ancak bazı arama motorları hala kullanıyor.</div>
                                        </div>
                                    </div>
                                </div>
                                <div class="mb-4">
                                    <label for="ReadTime" class="form-label fw-bold">
                                        <i class="bi bi-clock"></i> @Html.DisplayNameFor(model => model.ReadTime)
                                    </label>
                                    <input asp-for="ReadTime" class="form-control" type="number" min="1" max="60" placeholder="5" id="ReadTime" />
                                    <span asp-validation-for="ReadTime" class="text-danger"></span>
                                    <div class="form-text">İçeriğinizi okumak için gereken tahmini süre (dakika). Boş bırakırsanız otomatik hesaplanacaktır.</div>
                                </div>
                                <div class="card mb-4">
                                    <div class="card-header bg-light">
                                        <i class="bi bi-eye"></i> Google Önizleme
                                    </div>
                                    <div class="card-body">
                                        <div class="seo-preview">
                                            <h3 class="text-primary mb-1 fs-5" id="seoPreviewTitle">Yazı Başlığı</h3>
                                            <div class="text-success small mb-1" id="seoPreviewUrl">www.yoursite.com/posts/yazı-başlığı</div>
                                            <p class="small text-muted" id="seoPreviewDescription">İçerik açıklaması burada görünecektir...</p>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <!-- Ayarlar Sekmesi -->
                            <div class="tab-pane fade" id="settings" role="tabpanel" aria-labelledby="settings-tab">
                                <div class="row mb-4">
                                    <div class="col-md-6">
                                        <div class="mb-4">
                                            <label for="statusSelect" class="form-label fw-bold">
                                                <i class="bi bi-calendar-check"></i> Yayın Durumu
                                            </label>
                                            <select class="form-select" id="statusSelect" name="statusSelect">
                                                <option value="draft">Taslak (sadece siz görebilirsiniz)</option>
                                                <option value="publish">Hemen Yayınla</option>
                                            </select>
                                        </div>
                                    </div>
                                </div>

                                <div class="mb-4">
                                    <div class="form-check form-switch">
                                        <input asp-for="IsActive" class="form-check-input" type="checkbox" id="isActiveSwitch" checked />
                                        <label class="form-check-label fw-bold" for="isActiveSwitch">
                                            <i class="bi bi-eye"></i> @Html.DisplayNameFor(model => model.IsActive)
                                        </label>
                                    </div>
                                    <div class="form-text">Pasif içerikler web sitenizde görüntülenmez.</div>
                                </div>

                                <div class="mb-4">
                                    <div class="form-check form-switch">
                                        <input asp-for="IsDraft" class="form-check-input" type="checkbox" id="isDraftSwitch" />
                                        <label class="form-check-label fw-bold" for="isDraftSwitch">
                                            <i class="bi bi-save"></i> @Html.DisplayNameFor(model => model.IsDraft)
                                        </label>
                                    </div>
                                    <div class="form-text">İçerik üzerinde çalışmaya devam etmek için taslak olarak kaydedin.</div>
                                </div>

                                <div class="mb-4">
                                    <label for="SelectedTagIds" class="form-label fw-bold">
                                        <i class="bi bi-tags"></i> @Html.DisplayNameFor(model => model.SelectedTagIds)
                                    </label>
                                    <div class="row g-2">
                                        @foreach (var tag in ViewBag.Tags)
                                        {
                                            <div class="col-md-3 col-6">
                                                <div class="form-check">
                                                    <input type="checkbox" name="SelectedTagIds" value="@tag.TagId" class="form-check-input" id="tag-@tag.TagId" />
                                                    <label class="form-check-label" for="tag-@tag.TagId">
                                                        @{
                                                            string tagColor = tag.Color.ToString().ToLower();
                                                        }
                                                        <span class="badge bg-@tagColor">@tag.Name</span>
                                                    </label>
                                                </div>
                                            </div>
                                        }
                                    </div>
                                    <div class="form-text">En az bir etiket seçmeniz tavsiye edilir.</div>
                                </div>
                            </div>
                        </div>

                        <div class="d-flex justify-content-between mt-4">
                            <div>
                                <a asp-action="Index" asp-controller="Posts" class="btn btn-outline-secondary">
                                    <i class="bi bi-arrow-left"></i> İptal
                                </a>
                            </div>
                            <div>
                                <button type="submit" class="btn btn-lg btn-primary me-2" name="action" value="draft">
                                    <i class="bi bi-save"></i> Taslak Olarak Kaydet
                                </button>
                                <button type="submit" class="btn btn-lg btn-success" name="action" value="publish">
                                    <i class="bi bi-check-circle"></i> Hemen Yayınla
                                </button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Blog Yazım İpuçları Modal -->
<div class="modal fade" id="blogTipsModal" tabindex="-1" aria-labelledby="blogTipsModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title" id="blogTipsModalLabel">Blog Yazımı İpuçları</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-6">
                        <h6 class="fw-bold"><i class="bi bi-pencil"></i> İçerik Oluşturma</h6>
                        <ul>
                            <li>Net, anlaşılır başlıklar kullanın</li>
                            <li>İlk paragrafta konuyu özetleyin</li>
                            <li>Kısa paragraflar ve cümleler tercih edin</li>
                            <li>Başlıkları hiyerarşik olarak kullanın (H2, H3)</li>
                            <li>Örnekler ve gerçek hayat uygulamaları ekleyin</li>
                            <li>İçeriği bölümler halinde yapılandırın</li>
                        </ul>
                    </div>
                    <div class="col-md-6">
                        <h6 class="fw-bold"><i class="bi bi-search"></i> SEO İpuçları</h6>
                        <ul>
                            <li>Anahtar kelimenizi başlıkta kullanın</li>
                            <li>Meta açıklaması 150-160 karakter olmalı</li>
                            <li>Alt etiketleri resimler için kullanın</li>
                            <li>İçerikte dahili ve harici bağlantılar ekleyin</li>
                            <li>Anahtar kelimeleri doğal şekilde yerleştirin</li>
                            <li>Okunabilirliği SEO'dan önce düşünün</li>
                        </ul>
                    </div>
                </div>
                <div class="row mt-3">
                    <div class="col-md-6">
                        <h6 class="fw-bold"><i class="bi bi-camera"></i> Görsel Kullanımı</h6>
                        <ul>
                            <li>Yüksek kaliteli görseller kullanın</li>
                            <li>Telif hakkına saygı gösterin</li>
                            <li>Resimlerinizi optimize edin</li>
                            <li>İnfografikler ve diyagramlar ekleyin</li>
                            <li>Metni destekleyici görseller seçin</li>
                        </ul>
                    </div>
                    <div class="col-md-6">
                        <h6 class="fw-bold"><i class="bi bi-people"></i> Okuyucuları Düşünün</h6>
                        <ul>
                            <li>Hedef kitlenize uygun ton kullanın</li>
                            <li>Jargondan kaçının (gerekli değilse)</li>
                            <li>Okuyucuya doğrudan hitap edin</li>
                            <li>Etkileşimi teşvik eden sorular sorun</li>
                            <li>Tarayarak okunabilir içerik oluşturun</li>
                        </ul>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Kapat</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script src="https://cdn.ckeditor.com/ckeditor5/39.0.1/classic/ckeditor.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            console.log("Blog yazısı oluşturma sayfası yüklendi");
            
            // Simple upload adapter plugin
            class MyUploadAdapter {
                constructor(loader) {
                    this.loader = loader;
                }

                upload() {
                    return this.loader.file
                        .then(file => new Promise((resolve, reject) => {
                            const data = new FormData();
                            data.append('upload', file);
                            
                            // Add CSRF token
                            const token = document.querySelector('input[name="__RequestVerificationToken"]').value;
                            
                            fetch('/Posts/UploadImage', {
                                method: 'POST',
                                body: data,
                                headers: {
                                    'X-CSRF-TOKEN': token
                                }
                            })
                            .then(response => {
                                if (!response.ok) {
                                    throw new Error('Network response was not ok');
                                }
                                return response.json();
                            })
                            .then(data => {
                                if (data && data.url) {
                                    resolve({
                                        default: data.url
                                    });
                                } else {
                                    reject('Upload failed');
                                }
                            })
                            .catch(error => {
                                console.error('Upload error:', error);
                                reject(error);
                            });
                        }));
                }

                abort() {
                    console.log('Upload aborted');
                }
            }

            function MyUploadAdapterPlugin(editor) {
                editor.plugins.get('FileRepository').createUploadAdapter = (loader) => {
                    return new MyUploadAdapter(loader);
                };
            }
            
            // CKEditor Başlatma - Geliştirilmiş araç çubuğu yapılandırması
            ClassicEditor
                .create(document.querySelector('#Content'), {
                    toolbar: ['undo', 'redo', 'heading', 'bold', 'italic', 'link', 'bulletedList', 'numberedList', 'blockQuote', 'insertImage', 'mediaEmbed'],
                    language: 'tr',
                    image: {
                        toolbar: [
                            'imageStyle:full',
                            'imageStyle:side',
                            'imageTextAlternative'
                        ]
                    },
                    extraPlugins: [MyUploadAdapterPlugin]
                })
                .then(editor => {
                    console.log('CKEditor başarıyla yüklendi:', editor);
                    window.editor = editor;
                    
                    // CKEditor'ın oluşturduğu içerik div'ini erişilebilir yap
                    const editorElement = document.querySelector('.ck-editor__editable');
                    if (editorElement) {
                        editorElement.setAttribute('tabindex', '0');
                        editorElement.setAttribute('aria-label', 'İçerik editörü');
                    }
                })
                .catch(error => {
                    console.error('CKEditor yüklenirken hata oluştu:', error);
                });

            // Resim önizleme
            const imageInput = document.getElementById('ImageFile');
            const imagePreview = document.getElementById('imagePreview');
            const previewImg = document.getElementById('previewImg');

            if (imageInput) {
                imageInput.addEventListener('change', function() {
                    console.log("Resim yüklendi, önizleme oluşturuluyor");
                    if (this.files && this.files[0]) {
                        const reader = new FileReader();
                        reader.onload = function(e) {
                            previewImg.src = e.target.result;
                            imagePreview.classList.remove('d-none');
                        }
                        reader.readAsDataURL(this.files[0]);
                    } else {
                        imagePreview.classList.add('d-none');
                    }
                });
            }

            // YouTube Video Önizleme - videoInput ID'si düzeltildi
            const videoInput = document.getElementById('VideoUrl');
            const videoPreview = document.getElementById('videoPreview');
            const youtubeEmbed = document.getElementById('youtubeEmbed');

            if (videoInput) {
                videoInput.addEventListener('input', function() {
                    console.log("Video URL girildi, önizleme oluşturuluyor");
                    const videoUrl = this.value.trim();
                    if (videoUrl) {
                        const videoId = extractYouTubeId(videoUrl);
                        if (videoId) {
                            youtubeEmbed.src = `https://www.youtube.com/embed/${videoId}`;
                            videoPreview.classList.remove('d-none');
                        } else {
                            videoPreview.classList.add('d-none');
                        }
                    } else {
                        videoPreview.classList.add('d-none');
                    }
                });
            }

            // SEO Önizlemesi güncelleme - urlSlug ID'si düzeltildi
            const titleInput = document.getElementById('Title');
            const descriptionInput = document.getElementById('Description');
            const urlInput = document.getElementById('Url');
            const seoPreviewTitle = document.getElementById('seoPreviewTitle');
            const seoPreviewDescription = document.getElementById('seoPreviewDescription');
            const seoPreviewUrl = document.getElementById('seoPreviewUrl');

            function updateSeoPreview() {
                if (titleInput && descriptionInput && urlInput && seoPreviewTitle && seoPreviewDescription && seoPreviewUrl) {
                    seoPreviewTitle.textContent = titleInput.value || 'Yazı Başlığı';
                    seoPreviewDescription.textContent = descriptionInput.value || 'İçerik açıklaması burada görünecektir...';
                    
                    const slug = urlInput.value || (titleInput.value ? convertToSlug(titleInput.value) : 'yazı-başlığı');
                    seoPreviewUrl.textContent = `www.yoursite.com/posts/${slug}`;
                }
            }

            if (titleInput && descriptionInput && urlInput) {
                titleInput.addEventListener('input', updateSeoPreview);
                descriptionInput.addEventListener('input', updateSeoPreview);
                urlInput.addEventListener('input', updateSeoPreview);

                // Başlık değiştiğinde otomatik slug oluşturma
                titleInput.addEventListener('blur', function() {
                    console.log("Başlık alanından çıkıldı, slug oluşturuluyor");
                    if (!urlInput.value && this.value) {
                        urlInput.value = convertToSlug(this.value);
                        updateSeoPreview();
                    }
                });
            }

            // Okuma süresi hesaplama - CKEditor için
            function calculateReadTime() {
                try {
                    if (window.editor) {
                        const content = window.editor.getData();
                        // HTML tagları kaldır
                        const textContent = content.replace(/<[^>]*>/g, '');
                        console.log("İçerik değişti, okuma süresi hesaplanıyor");
                        const wordCount = textContent.split(/\s+/).length;
                        // Ortalama okuma hızı: dakikada 200 kelime
                        const readTimeMinutes = Math.ceil(wordCount / 200);
                        // ReadTime input'unu güncelle (eğer kullanıcı manuel girdiyse değiştirme)
                        const readTimeInput = document.getElementById('ReadTime');
                        if (!readTimeInput.value || readTimeInput.value === '0') {
                            readTimeInput.value = readTimeMinutes > 0 ? readTimeMinutes : 1;
                        }
                    }
                } catch (e) {
                    console.error("Okuma süresi hesaplanırken hata oluştu:", e);
                }
            }

            // CKEditor içeriği değiştiğinde okuma süresini hesapla
            if (window.editor) {
                // Bu kısım editör yüklendikten sonra çalışacak
                setTimeout(() => {
                    if (window.editor) {
                        window.editor.model.document.on('change:data', calculateReadTime);
                    }
                }, 1000);
            }

            // YouTube ID çıkarma yardımcı fonksiyonu
            function extractYouTubeId(url) {
                const regExp = /^.*((youtu.be\/)|(v\/)|(\/u\/\w\/)|(embed\/)|(watch\?))\??v?=?([^#&?]*).*/;
                const match = url.match(regExp);
                return (match && match[7].length === 11) ? match[7] : null;
            }

            // String'i slug'a çevirme yardımcı fonksiyonu
            function convertToSlug(text) {
                return text
                    .toLowerCase()
                    .replace(/[^\w ]+/g, '')
                    .replace(/ +/g, '-')
                    .replace(/[ğ]/g, 'g')
                    .replace(/[ü]/g, 'u')
                    .replace(/[ş]/g, 's')
                    .replace(/[ı]/g, 'i')
                    .replace(/[ö]/g, 'o')
                    .replace(/[ç]/g, 'c');
            }

            // Sayfa yüklendiğinde SEO önizlemesini başlat
            updateSeoPreview();
        });
    </script>
}

@functions {
    string GetTagColorClass(dynamic tag)
    {
        if (tag.Color == null) return "secondary";
        
        try {
            int colorValue = Convert.ToInt32(tag.Color);
            return colorValue switch
            {
                0 => "primary",
                1 => "secondary",
                2 => "success",
                3 => "danger",
                4 => "warning",
                5 => "purple",
                6 => "orange",
                7 => "dark",
                _ => "secondary"
            };
        }
        catch {
            return "secondary";
        }
    }
} 