@model BlogApp.Models.ViewModels.PostListViewModel

@{
    ViewData["Title"] = "Blog Yazıları";
}

<div class="container">
    <div class="row">
        <div class="col-md-8">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h1 class="h3">@ViewData["Title"]</h1>
                
                <div class="dropdown">
                    <button class="btn btn-outline-secondary dropdown-toggle" type="button" id="sortDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                        @(Model.CurrentSort switch
                        {
                            "title" => "Başlığa Göre",
                            "likes" => "Beğeniye Göre",
                            "comments" => "Yoruma Göre",
                            _ => "Tarihe Göre"
                        })
                    </button>
                    <ul class="dropdown-menu" aria-labelledby="sortDropdown">
                        <li><a class="dropdown-item @(Model.CurrentSort == "date" ? "active" : "")" 
                            asp-route-page="@Model.CurrentPage" 
                            asp-route-tag="@Model.CurrentTag">Tarihe Göre</a></li>
                        <li><a class="dropdown-item @(Model.CurrentSort == "title" ? "active" : "")" 
                            asp-route-sort="title" 
                            asp-route-page="@Model.CurrentPage" 
                            asp-route-tag="@Model.CurrentTag">Başlığa Göre</a></li>
                        <li><a class="dropdown-item @(Model.CurrentSort == "likes" ? "active" : "")" 
                            asp-route-sort="likes" 
                            asp-route-page="@Model.CurrentPage" 
                            asp-route-tag="@Model.CurrentTag">Beğeniye Göre</a></li>
                        <li><a class="dropdown-item @(Model.CurrentSort == "comments" ? "active" : "")" 
                            asp-route-sort="comments" 
                            asp-route-page="@Model.CurrentPage" 
                            asp-route-tag="@Model.CurrentTag">Yoruma Göre</a></li>
                    </ul>
                </div>
            </div>
            
            @if (Model.Posts.Any())
            {
                <div class="row row-cols-1 g-4">
                    @foreach (var post in Model.Posts)
                    {
                        <div class="col">
                            <div class="card shadow-sm h-100">
                                <div class="row g-0">
                                    <div class="col-md-4">
                                        <img src="@(string.IsNullOrEmpty(post.Image) ? "/img/posts/default.jpg" : post.Image)" 
                                             class="img-fluid rounded-start h-100" alt="@post.Title" 
                                             style="object-fit: cover; width: 100%; height: 100%; min-height: 200px;">
                                    </div>
                                    <div class="col-md-8">
                                        <div class="card-body d-flex flex-column h-100">
                                            <h2 class="card-title h5">
                                                <a href="/posts/@post.Url" class="text-decoration-none">@post.Title</a>
                                            </h2>
                                            
                                            @if (!string.IsNullOrEmpty(post.Description))
                                            {
                                                <p class="card-text">@(post.Description.Length > 150 ? post.Description.Substring(0, 150) + "..." : post.Description)</p>
                                            }
                                            
                                            <div class="mt-auto">
                                                <div class="d-flex justify-content-between align-items-center mb-2">
                                                    <div class="d-flex align-items-center">
                                                        <img src="@(string.IsNullOrEmpty(post.User.Image) ? "/img/profiles/default.jpg" : post.User.Image)" 
                                                             class="rounded-circle me-2" style="width: 24px; height: 24px; object-fit: cover;" 
                                                             alt="@post.User.UserName">
                                                        <a href="/users/@post.User.UserName" class="text-muted small text-decoration-none">
                                                            @post.User.UserName
                                                            @if (post.User.IsAdmin)
                                                            {
                                                                <i class="bi bi-patch-check-fill text-primary" title="Admin"></i>
                                                            }
                                                        </a>
                                                    </div>
                                                    <small class="text-muted">@post.PublishedOn?.ToString("dd MMM yyyy")</small>
                                                </div>
                                                
                                                <div class="d-flex justify-content-between align-items-center">
                                                    <div class="text-muted small">
                                                        <i class="bi bi-hand-thumbs-up me-1"></i>@post.Reactions.Count(r => r.IsLike)
                                                        <span class="mx-1">•</span>
                                                        <i class="bi bi-chat me-1"></i>@post.Comments.Count
                                                        @if (post.ReadTime.HasValue && post.ReadTime > 0)
                                                        {
                                                            <span class="mx-1">•</span>
                                                            <i class="bi bi-clock me-1"></i>@post.ReadTime <text>dk</text>
                                                        }
                                                    </div>
                                                    
                                                    <div>
                                                        @foreach (var tag in post.Tags.Take(2))
                                                        {
                                                            string tagColor = "secondary";
                                                            if (tag.Color.HasValue)
                                                            {
                                                                switch(tag.Color.Value)
                                                                {
                                                                    case BlogApp.Entity.TagColors.Primary: tagColor = "primary"; break;
                                                                    case BlogApp.Entity.TagColors.Success: tagColor = "success"; break;
                                                                    case BlogApp.Entity.TagColors.Danger: tagColor = "danger"; break;
                                                                    case BlogApp.Entity.TagColors.Warning: tagColor = "warning"; break;
                                                                    case BlogApp.Entity.TagColors.Info: tagColor = "info"; break;
                                                                    case BlogApp.Entity.TagColors.Orange: tagColor = "orange"; break;
                                                                    case BlogApp.Entity.TagColors.Dark: tagColor = "dark"; break;
                                                                    default: tagColor = "secondary"; break;
                                                                }
                                                            }
                                                            
                                                            string textClass = (tagColor == "info" || tagColor == "warning") ? "text-dark" : "text-white";
                                                            
                                                            @if (tag.Color.HasValue && tag.Color.Value == BlogApp.Entity.TagColors.Info)
                                                            {
                                                                <a href="/tags/@tag.Url" class="badge text-dark text-decoration-none me-1" style="background-color: #0dcaf0 !important;">@tag.Name</a>
                                                            }
                                                            else
                                                            {
                                                                <a href="/tags/@tag.Url" class="badge bg-@tagColor @textClass text-decoration-none me-1">@tag.Name</a>
                                                            }
                                                        }
                                                        @if (post.Tags.Count > 2)
                                                        {
                                                            <span class="badge bg-light text-dark">+@(post.Tags.Count - 2)</span>
                                                        }
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
                
                @if (Model.TotalPages > 1)
                {
                    <nav aria-label="Page navigation">
                        <ul class="pagination justify-content-center">
                            @for (int i = 1; i <= Model.TotalPages; i++)
                            {
                                <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                                    <a class="page-link" asp-route-page="@i" 
                                       asp-route-sort="@Model.CurrentSort" 
                                       asp-route-tag="@Model.CurrentTag">@i</a>
                                </li>
                            }
                        </ul>
                    </nav>
                }
            }
            else
            {
                <div class="alert alert-info">
                    Henüz blog yazısı bulunmamaktadır.
                </div>
            }
        </div>
        <div class="col-md-4">
            @await Component.InvokeAsync("TagsMenu")
            @await Component.InvokeAsync("PopularPosts")
            @await Component.InvokeAsync("NewPosts")
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Add any necessary JavaScript here
    </script>
} 