@using BlogApp.Helpers
@model BlogApp.Models.ViewModels.PostListViewModel
@using BlogApp.Entity

@{
    ViewData["Title"] = "BlogApp - Ana Sayfa";
}

<div class="container">
    <div class="row mb-4">
        <div class="col-md-8">
            <div class="card border-0 bg-light mb-4 shadow-sm">
                <div class="card-body p-4">
                    <h1 class="display-6">Modern Blog Platformu</h1>
                    <p class="lead mb-4">Düşüncelerinizi paylaşın, bilgiyi keşfedin ve bir topluluk içinde büyüyün</p>
                    <div class="d-flex gap-2">
                        @if (User.Identity?.IsAuthenticated == true)
                        {
                            <a href="/posts/create" class="btn btn-primary">
                                <i class="bi bi-pencil-square me-2"></i>Yazı Oluştur
                            </a>
                        }
                        else
                        {
                            <a href="/account/register" class="btn btn-primary">
                                <i class="bi bi-person-plus me-2"></i>Kayıt Ol
                            </a>
                        }
                        <a href="/posts" class="btn btn-outline-dark">
                            <i class="bi bi-book me-2"></i>Yazıları Keşfet
                        </a>
                    </div>
                </div>
            </div>

            <div class="d-flex justify-content-between align-items-center mb-3">
                <h2 class="h4">Blog Yazıları</h2>
                <div class="dropdown">
                    <button class="btn btn-outline-secondary dropdown-toggle" type="button" id="sortDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                        @(Model.CurrentSort switch
                        {
                            "title" => "Başlığa Göre",
                            "likes" => "Beğeniye Göre",
                            "comments" => "Yoruma Göre",
                            _ => "Tarihe Göre"
                        })
                    </button>
                    <ul class="dropdown-menu" aria-labelledby="sortDropdown">
                        <li><a class="dropdown-item sort-link @(Model.CurrentSort == "date" ? "active" : "")" 
                            href="#" data-sort="date">Tarihe Göre</a></li>
                        <li><a class="dropdown-item sort-link @(Model.CurrentSort == "title" ? "active" : "")" 
                            href="#" data-sort="title">Başlığa Göre</a></li>
                        <li><a class="dropdown-item sort-link @(Model.CurrentSort == "likes" ? "active" : "")" 
                            href="#" data-sort="likes">Beğeniye Göre</a></li>
                        <li><a class="dropdown-item sort-link @(Model.CurrentSort == "comments" ? "active" : "")" 
                            href="#" data-sort="comments">Yoruma Göre</a></li>
                    </ul>
                </div>
            </div>

            <div id="posts-container">
                @await Html.PartialAsync("_PostsList", Model)
            </div>
        </div>
        
        <div class="col-md-4">
            <div class="card shadow-sm mb-4">
                <div class="card-body p-3">
                    <h3 class="h5 mb-3">BlogApp Topluluğu</h3>
                    <div class="row g-2 text-center">
                        <div class="col-4">
                            <div class="bg-light rounded p-2">
                                <div class="text-primary mb-1">
                                    <i class="bi bi-file-earmark-text"></i>
                                </div>
                                <p class="h5 mb-0 fw-bold">@ViewBag.TotalPosts</p>
                                <p class="small text-muted mb-0">Yazı</p>
                            </div>
                        </div>
                        <div class="col-4">
                            <div class="bg-light rounded p-2">
                                <div class="text-primary mb-1">
                                    <i class="bi bi-people"></i>
                                </div>
                                <p class="h5 mb-0 fw-bold">@ViewBag.TotalUsers</p>
                                <p class="small text-muted mb-0">Yazar</p>
                            </div>
                        </div>
                        <div class="col-4">
                            <div class="bg-light rounded p-2">
                                <div class="text-primary mb-1">
                                    <i class="bi bi-tag"></i>
                                </div>
                                <p class="h5 mb-0 fw-bold">@ViewBag.TotalTags</p>
                                <p class="small text-muted mb-0">Etiket</p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            
            @await Component.InvokeAsync("TagsMenu")
            @await Component.InvokeAsync("PopularPosts")
            @await Component.InvokeAsync("NewPosts")
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Sayfalama linklerine tıklama olayı
            $(document).on('click', '.page-link', function(e) {
                e.preventDefault();
                var page = $(this).data('page');
                var sort = $(this).data('sort');
                loadPosts(page, sort);
            });

            // Sıralama linklerine tıklama olayı
            $('.sort-link').click(function(e) {
                e.preventDefault();
                var sort = $(this).data('sort');
                loadPosts(1, sort); // Sıralama değiştiğinde ilk sayfaya dön
            });

            // Posts yükleme fonksiyonu
            function loadPosts(page, sort) {
                $.get('/Home/GetPosts', { page: page, sort: sort }, function(data) {
                    $('#posts-container').html(data);
                    // URL'yi güncelle (sayfa yenilenmeden)
                    var newUrl = new URL(window.location);
                    newUrl.searchParams.set('page', page);
                    newUrl.searchParams.set('sort', sort);
                    window.history.pushState({}, '', newUrl);
                });
            }
        });
    </script>
} 