@model IEnumerable<BlogApp.Entity.Tag>

@{
    ViewData["Title"] = "Etiketler";
}

<div class="container">
    <h2>@ViewData["Title"]</h2>
    
    @if (TempData["Message"] != null)
    {
        <div class="alert alert-@TempData["MessageType"] alert-dismissible fade show" role="alert">
            @TempData["Message"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    
    <p>
        @if (User.IsInRole("Admin"))
        {
            <a asp-action="Create" class="btn btn-primary">Yeni Etiket</a>
        }
    </p>
    <table class="table">
        <thead>
            <tr>
                <th>@Html.DisplayNameFor(model => model.Name)</th>
                <th>@Html.DisplayNameFor(model => model.Url)</th>
                <th>@Html.DisplayNameFor(model => model.Color)</th>
                @if (User.IsInRole("Admin"))
                {
                    <th>İşlemler</th>
                }
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.Name)</td>
                    <td>@Html.DisplayFor(modelItem => item.Url)</td>
                    <td>
                        @{
                            string tagColor = item.Color?.ToString().ToLower() ?? "secondary";
                            string textClass = (tagColor == "info" || tagColor == "warning") ? "text-dark" : "text-white";
                            bool isSpecialTag = item.Name == "Entity Framework" || item.Name == "CSS" || item.Name == "React";
                            string specialClass = "";
                            
                            if (item.Name == "Entity Framework") specialClass = "entity-framework-tag";
                            else if (item.Name == "CSS") specialClass = "css-tag";
                            else if (item.Name == "React") specialClass = "react-tag";
                        }
                        
                        @if (tagColor == "info" || isSpecialTag)
                        {
                            <span class="badge text-dark p-2 @specialClass" style="background-color: #0dcaf0 !important;">@item.Name</span>
                        }
                        else
                        {
                            <span class="badge bg-@tagColor @textClass p-2">@item.Name</span>
                        }
                    </td>
                    @if (User.IsInRole("Admin"))
                    {
                        <td>
                            <a asp-action="Edit" asp-route-id="@item.TagId" class="btn btn-warning btn-sm">Düzenle</a>
                            <a asp-action="Delete" asp-route-id="@item.TagId" class="btn btn-danger btn-sm">Sil</a>
                        </td>
                    }
                </tr>
            }
        </tbody>
    </table>
</div>

@section Scripts {
<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Özel tagleri manuel olarak düzelt
        document.querySelectorAll('span.badge').forEach(function(badge) {
            if (badge.textContent.includes('Entity Framework') || 
                badge.textContent.includes('CSS') || 
                badge.textContent.includes('React')) {
                
                badge.style.backgroundColor = '#0dcaf0';
                badge.style.color = '#000';
                badge.classList.add('text-dark');
                badge.classList.remove('bg-secondary', 'text-white');
            }
            
            // Info renkli badgelar için ek güvence
            if (badge.classList.contains('bg-info')) {
                badge.style.backgroundColor = '#0dcaf0 !important';
                badge.style.color = '#000 !important';
            }
        });
    });
</script>
} 